version: '3'

volumes:
  mongodata:
    name: mongodata
  configdb:
    name: configdb
  redisdata:
    name: redisdata
  prometheusdata:
    name: prometheusdata

networks:
  backnet:
    name: backnet
  default:
    external:
      name: backnet

services:
  app:
    # container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - mongodb
      - redis
    volumes:
      - ..:/tstudio:cached
    networks:
      - backnet
    command: /bin/sh -c "while sleep 1000; do :; done"

  mongodb:
    image: mongo:latest
    # container_name: app_db
    restart: always
    ports:
      - 9999:27017
    networks:
      backnet:
        aliases:
          - mongodb
          - db
    volumes:
      - ./config/mongod.conf:/etc/mongo/mongod.conf
      - ./logger/mongo.log:/var/log/mongo.log
      - mongodata:/data/db
      - configdb:/data/configdb
    command: ["mongod", "-f", "/etc/mongo/mongod.conf"]

  redis:
    image: redis:latest
    # container_name: app_cache
    restart: unless-stopped
    ports:
      - 9997:6379
    networks:
      backnet:
        aliases:
          - redis
    volumes:
      - ./config/redis.conf:/etc/redis/redis.conf
      - redisdata:/data
    command: ["redis-server", "/etc/redis/redis.conf"]

  prometheus:
    image: prom/prometheus:latest
    # container_name: app_monitor
    ports:
      - 9990:9090
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheusdata:/prometheus
    networks:
      backnet:
        aliases:
          - prometheus
    depends_on:
      - cadvisor
    command:
      - --config.file=/etc/prometheus/prometheus.yml

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    # container_name: app_cadvisor
    ports:
      - 9991:8080
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    networks:
      - backnet
    depends_on:
      - redis
      - mongodb
      - app